version: "3.7"

services:
  eventservice:
    build: ./eventservice
    command: npm install && npm setup && npm start
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    depends_on:
      redis:
        condition: service_healthy 
    volumes:
     - .:/app
    ports:
      - "4000:80"
    networks:
      - back-tier

  queueworker:
    build: ./queueworker
    command: npm install && npm start
    depends_on:
      redis:
        condition: service_healthy 
      db:
        condition: service_healthy 
    ports:
      - "5000:80"
    volumes:
      - .:/app
    networks:
      - back-tier

  redis:
    image: redis:latest
    ports: ["6379"]
    healthcheck:
      test: /healthchecks/redis.sh
      interval: "5s"
    networks:
      - back-tier

  db:
    image: postgres:9.4
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "5432:5432"
    volumes:
      - "db-data:/var/lib/postgresql/data"
      - "./healthchecks:/healthchecks"
    healthcheck:
      test: /healthchecks/postgres.sh
      interval: "5s"
    networks:
      - back-tier

volumes:
  db-data:

networks:
  back-tier:
